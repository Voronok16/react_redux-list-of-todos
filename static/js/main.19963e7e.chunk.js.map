{"version":3,"sources":["store/store.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App/App.js","App/index.js","index.js"],"names":["API_URL","ACTION_TYPES","ADD_DATA","LOAD_DATA","SORT_DATA","COMPLETE_DATA","loadData","data","type","payload","initialState","isLoading","isReady","getData","dispatch","store","Promise","all","fetch","concat","then","_ref","_ref2","Object","slicedToArray","res1","res2","json","_ref3","_ref4","todos","users","map","todo","_objectSpread","user","find","person","id","userId","createStore","state","arguments","length","undefined","action","toConsumableArray","sort","a","b","title","localeCompare","completed","applyMiddleware","thunk","User","react_default","createElement","className","name","href","email","phone","website","TodoItem","User_User","TodoList","dataFromServer","item","components_TodoItem_TodoItem","key","App","props","sortData","completeData","onClick","components_TodoList_TodoList","EnhancedApp","connect","ReactDOM","render","es","document","getElementById"],"mappings":"u0BAGA,IAAMA,EAAU,uCAEVC,EAAe,CACnBC,SAAU,YACVC,UAAW,YACXC,UAAW,aACXC,cAAe,iBAkBXC,EAAW,SAAAC,GAAI,MAAK,CACxBC,KAAMP,EAAaE,UACnBM,QAASF,IAGLG,EAAe,CACnBH,KAAM,GACNI,WAAW,EACXC,SAAS,GAGEC,EAAU,kBAAM,SAACC,GAC5BC,EAAMD,SAASR,KACfU,QAAQC,IAAI,CACVC,MAAK,GAAAC,OAAInB,EAAJ,WACLkB,MAAK,GAAAC,OAAInB,EAAJ,aAEJoB,KAAK,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEI,EAAFH,EAAA,GAAQI,EAARJ,EAAA,UAAkBN,QAAQC,IAAI,CAACQ,EAAKE,OAAQD,EAAKC,WACtDP,KAAK,SAAAQ,GAAA,IAjCarB,EAiCbsB,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAAEE,EAAFD,EAAA,GAASE,EAATF,EAAA,UAAoBd,EAAMD,UAjCbP,EAiC8BuB,EAAME,IAAI,SAAAC,GAAI,OAAAC,EAAA,GAExDD,EAFwD,CAG3DE,KAAMJ,EAAMK,KAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAOL,EAAKM,aApCtB,CAC9B/B,KAAMP,EAAaC,SACnBO,QAASF,IAqCPQ,EAAMD,SAASR,UAmCZ,IAAMS,EAAQyB,YAhCrB,WAAoD,IAAnCC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BhC,EAAcmC,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC9C,OAAQG,EAAOrC,MACb,KAAKP,EAAaC,SAChB,OAAAgC,EAAA,GACKO,EADL,CAEElC,KAAMsC,EAAOpC,UAGjB,KAAKR,EAAaE,UAChB,OAAA+B,EAAA,GACKO,EADL,CAEE9B,WAAY8B,EAAM9B,YAGtB,KAAKV,EAAaG,UAChB,OAAA8B,EAAA,GACKO,EADL,CAEElC,KAAMgB,OAAAuB,EAAA,EAAAvB,CAAIkB,EAAMlC,MAAMwC,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,MAAMC,cAAcF,EAAEC,WAIlE,KAAKjD,EAAaI,cAChB,OAAA6B,EAAA,GACKO,EADL,CAEElC,KAAMgB,OAAAuB,EAAA,EAAAvB,CAAIkB,EAAMlC,MAAMwC,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEG,UAAYJ,EAAEI,cAGzD,QACE,OAAOX,IAMXY,YAAgBC,MC/DHC,MAtBf,SAAAlC,GAAwB,IAARc,EAAQd,EAARc,KACd,OACEqB,EAAAR,EAAAS,cAAA,OAAKC,UAAU,aACbF,EAAAR,EAAAS,cAAA,SACED,EAAAR,EAAAS,cAAA,cAAStB,EAAKwB,OAEhBH,EAAAR,EAAAS,cAAA,KAAGG,KAAI,UAAAzC,OAAYgB,EAAK0B,QAAU1B,EAAK0B,OACvCL,EAAAR,EAAAS,cAAA,SAAItB,EAAK2B,OACTN,EAAAR,EAAAS,cAAA,KAAGG,KAAI,GAAAzC,OAAKgB,EAAK4B,UAAY5B,EAAK4B,iBCgBzBC,MAtBf,SAAA3C,GAA4B,IAARY,EAAQZ,EAARY,KAClB,OACEuB,EAAAR,EAAAS,cAAA,OACEC,UAAWzB,EAAKmB,UACZ,sBACA,2BAEJI,EAAAR,EAAAS,cAAA,UAAKxB,EAAKiB,OACVM,EAAAR,EAAAS,cAAA,SAAIxB,EAAKmB,UAAY,YAAc,iBACnCI,EAAAR,EAAAS,cAACQ,EAAD,CAAM9B,KAAMF,EAAKE,eCGR+B,MAZf,SAAA7C,GAAsC,IAAlB8C,EAAkB9C,EAAlB8C,eAClB,OACEX,EAAAR,EAAAS,cAAA,OAAKC,UAAU,cACZS,EAAenC,IAAI,SAAAoC,GAAI,OAAIZ,EAAAR,EAAAS,cAACY,EAAD,CAAUpC,KAAMmC,EAAME,IAAKF,EAAK9B,eC2DnDiC,MA9Df,SAAaC,GAAO,IAEhBjE,EAKEiE,EALFjE,KACAI,EAIE6D,EAJF7D,UACAE,EAGE2D,EAHF3D,QACA4D,EAEED,EAFFC,SACAC,EACEF,EADFE,aAEF,OAAI/D,EAEA6C,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACbF,EAAAR,EAAAS,cAAA,yBAKc,IAAhBlD,EAAKoC,OAELa,EAAAR,EAAAS,cAAA,OAAKC,UAAU,SACbF,EAAAR,EAAAS,cAAA,UACEC,UAAU,eACVlD,KAAK,SACLmE,QAAS9D,GAHX,SAYJ2C,EAAAR,EAAAS,cAAA,OAAKC,UAAU,OACbF,EAAAR,EAAAS,cAAA,mCACAD,EAAAR,EAAAS,cAAA,UACEC,UAAU,cACVlD,KAAK,SACLmE,QAASF,GAHX,QAOAjB,EAAAR,EAAAS,cAAA,UACEC,UAAU,cACVlD,KAAK,SACLmE,QAASD,GAHX,YAOAlB,EAAAR,EAAAS,cAACmB,EAAD,CACET,eAAgB5D,MC3ClBsE,EAAcC,YAClB,SAAArC,GAAK,MAAK,CAAElC,KAAMkC,EAAMlC,KAAMI,UAAW8B,EAAM9B,YAPtB,SAAAG,GAAQ,MAAK,CACtCD,QAAS,kBAAMC,EAASD,MACxB4D,SAAU,kBAAM3D,ELWe,CAC/BN,KAAMP,EAAaG,UACnBK,QAASF,IAFa,IAAAA,GKVtBmE,aAAc,kBAAM5D,ELee,CACnCN,KAAMP,EAAaI,cACnBI,QAASF,IAFiB,IAAAA,KKZRuE,CAGlBP,GCPFQ,IAASC,OACPxB,EAAAR,EAAAS,cAACwB,EAAA,EAAD,CAAUlE,MAAOA,GACfyC,EAAAR,EAAAS,cAACoB,EAAD,OAEDK,SAASC,eAAe","file":"static/js/main.19963e7e.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst ACTION_TYPES = {\n  ADD_DATA: 'DATA::ADD',\n  LOAD_DATA: 'LOAD::ADD',\n  SORT_DATA: 'SORT::DATA',\n  COMPLETE_DATA: 'COMPLETE_DATA',\n};\n\nexport const addData = data => ({\n  type: ACTION_TYPES.ADD_DATA,\n  payload: data,\n});\n\nexport const sortData = data => ({\n  type: ACTION_TYPES.SORT_DATA,\n  payload: data,\n});\n\nexport const completeData = data => ({\n  type: ACTION_TYPES.COMPLETE_DATA,\n  payload: data,\n});\n\nconst loadData = data => ({\n  type: ACTION_TYPES.LOAD_DATA,\n  payload: data,\n});\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  isReady: true,\n};\n\nexport const getData = () => (dispatch) => {\n  store.dispatch(loadData());\n  Promise.all([\n    fetch(`${API_URL}/todos`),\n    fetch(`${API_URL}/users`),\n  ])\n    .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\n    .then(([todos, users]) => store.dispatch(addData(todos.map(todo => (\n      {\n        ...todo,\n        user: users.find(person => person.id === todo.userId),\n      }\n    ))),\n    store.dispatch(loadData())));\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_DATA: {\n      return {\n        ...state,\n        data: action.payload,\n      };\n    }\n    case ACTION_TYPES.LOAD_DATA: {\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    }\n    case ACTION_TYPES.SORT_DATA: {\n      return {\n        ...state,\n        data: [...state.data].sort((a, b) => (a.title.localeCompare(b.title)\n        )),\n      };\n    }\n    case ACTION_TYPES.COMPLETE_DATA: {\n      return {\n        ...state,\n        data: [...state.data].sort((a, b) => b.completed - a.completed),\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <div className=\"user-info\">\n      <p>\n        <strong>{user.name}</strong>\n      </p>\n      <a href={`mailto:${user.email}`}>{user.email}</a>\n      <p>{user.phone}</p>\n      <a href={`${user.website}`}>{user.website}</a>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    website: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport './TodoItem.css';\n\nfunction TodoItem({ todo }) {\n  return (\n    <div\n      className={todo.completed\n        ? 'todo-item__complete'\n        : 'todo-item__not-complete'}\n    >\n      <h2>{todo.title}</h2>\n      <p>{todo.completed ? 'Completed' : 'Not completed'}</p>\n      <User user={todo.user} />\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    user: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nfunction TodoList({ dataFromServer }) {\n  return (\n    <div className=\"todos-list\">\n      {dataFromServer.map(item => <TodoItem todo={item} key={item.id} />)}\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  dataFromServer: PropTypes.arrayOf().isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from '../components/TodoList/TodoList';\nimport './App.css';\n\nfunction App(props) {\n  const {\n    data,\n    isLoading,\n    getData,\n    sortData,\n    completeData,\n  } = props;\n  if (isLoading) {\n    return (\n      <div className=\"app\">\n        <p>Loading ...</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"start\">\n        <button\n          className=\"start-button\"\n          type=\"button\"\n          onClick={getData}\n        >\n          Show\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Dynamic list of todos</h1>\n      <button\n        className=\"button-sort\"\n        type=\"button\"\n        onClick={sortData}\n      >\n        Task\n      </button>\n      <button\n        className=\"button-sort\"\n        type=\"button\"\n        onClick={completeData}\n      >\n        Complete\n      </button>\n      <TodoList\n        dataFromServer={data}\n      />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  data: PropTypes.arrayOf().isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  getData: PropTypes.func.isRequired,\n  sortData: PropTypes.func.isRequired,\n  completeData: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getData, sortData, completeData } from '../store/store';\n\nconst mapDispatchToProps = dispatch => ({\n  getData: () => dispatch(getData()),\n  sortData: () => dispatch(sortData()),\n  completeData: () => dispatch(completeData()),\n});\n\nconst EnhancedApp = connect(\n  state => ({ data: state.data, isLoading: state.isLoading }),\n  mapDispatchToProps,\n)(App);\n\nexport {\n  EnhancedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { App } from './App/index';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}